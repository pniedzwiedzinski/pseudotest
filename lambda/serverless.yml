service: pseudotest

plugins:
  - serverless-python-requirements

custom:
  buckets:
    prod: pseudotester
    dev: pseudotester-dev
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  runtime: python3.7
  versionFunctions: false
  memorySize: 256
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:DeleteObject
      Resource:
        - arn:aws:s3:::${self:custom.buckets.${opt:stage}}/*

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  pseudotester:
    handler: handler.lambda_handler
    reservedConcurrency: 50
    timeout: 60
    environment:
      S3_BUCKET: ${self:custom.buckets.${opt:stage}}
      DB_NAME: pseudotest
      DB_USER: ${env:DB_USER}
      DB_PASSWORD: ${env:DB_PASSWORD}
      DB_HOST: ${env:DB_HOST}
    events:
      - s3:
          bucket: ${self:custom.buckets.${opt:stage}}
          event: s3:ObjectCreated:*
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
