version: 2

orbs: # specify all orbs you want to use.
  aws-code-deploy: circleci/aws-code-deploy@1.0.0

jobs:
  test_django:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
        environment:
          S3_BUCKET: none
          DB_NAME: pseudotest
          DB_USER: root
          DB_PASSWORD: testing
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
      - image: mariadb:10.3
        environment:
          MYSQL_ROOT_PASSWORD: testing
          MYSQL_DATABASE: pseudotest

    working_directory: ~/repo/test_django

    steps:
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
            - django-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - django-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: django-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test

  test_lambda:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo/lambda

    steps:
      - checkout:
          path: ~/repo

      - restore_cache:
          keys:
            - lambda-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - lambda-dependencies-

      - run:
          name: Install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          key: lambda-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ./node_modules
            - ./venv

  deploy_serverless:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo/lambda

    steps:
      - checkout:
          path: ~/repo

      - run:
          name: Install npm serverless
          command: npm ci

      - run:
          name: Deploy serverless
          command: sls deploy --stage prod

workflows:
  version: 2

  build_deploy:
    jobs:
      - test_django
      - test_lambda
      - aws-code-deploy/deploy:
          requires:
            - test_django
            - test_lambda
          filters:
            branches:
              only: master
          application-name: PseudoTest # The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.
          deployment-group: PseudoTest-DepGrp # The name of a new deployment group for the specified application.
          service-role-arn: CodeDeployServiceRole # The service role for a deployment group.
          bundle-bucket: pseudotest-ec2 # The s3 bucket where an application revision will be stored.
          bundle-key: pseudotestDjangoApp # A key under the s3 bucket where an application revision will be stored.
      - deploy_serverless:
          requires:
            - test_django
            - test_lambda
          filters:
            branches:
              only: master
